package views.recipes;

import dao.RecipeDAO;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Recipe;
import models.RecipeIngredients;
import javax.swing.ListSelectionModel;
import models.Ingredient;

/**
 *
 * @author joaopedro
 */
public class RecipeView extends javax.swing.JFrame {

	private RecipeDAO recipeDAO;

	/**
	 * Creates new form RecipeView
	 */
	public RecipeView() {
		recipeDAO = new RecipeDAO();
		initComponents();
		loadRecipes();
		setupTableSelection();
	}

	private void loadRecipes() {

		RecipeDAO dao = new RecipeDAO();
		List<Recipe> recipes = dao.findAll();
		updateTable(recipes);
	}

	private void updateTable(List<Recipe> recipes) {
		DefaultTableModel model = new DefaultTableModel(
				new Object[]{"ID", "Name", "Description"}, 0);

		for (Recipe recipe : recipes) {
			model.addRow(new Object[]{
				recipe.getId(),
				recipe.getName(),
				recipe.getDescription()
			});
		}

		jTable_Recipe.setModel(model);
	}

	private String formatIngredients(Recipe recipe) {
		StringBuilder sb = new StringBuilder();
		for (RecipeIngredients ri : recipe.getRecipeIngredients()) {
			sb.append(ri.getIngredient().getName())
					.append(" (")
					.append(ri.getQuantity())
					.append(" ")
					.append(ri.getIngredient().getUnit()) // Isso estÃ¡ correto
					.append("), ");
		}
		return sb.length() > 0 ? sb.substring(0, sb.length() - 2) : "";
	}

	private void setupTableSelection() {
		
		jTable_Recipe.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

		
		jTable_Recipe.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
			public void mouseMoved(java.awt.event.MouseEvent evt) {
				int row = jTable_Recipe.rowAtPoint(evt.getPoint());
				if (row >= 0) {
					String details = getRecipeDetails(row);
					jTable_Recipe.setToolTipText(details);
				}
			}
		});
	}

	private String getRecipeDetails(int rowIndex) {

		Object value = jTable_Recipe.getValueAt(rowIndex, 0);
		Long id;

		if (value instanceof Long) {
			id = (Long) value;
		}
		else if (value instanceof Integer) {
			id = Long.valueOf((Integer) value);
		}
		else {
			return "Invalid ID format.";
		}

		Recipe recipe = recipeDAO.findById(id);

		if (recipe == null) {
			return "Recipe not found.";
		}

		StringBuilder ingredientsFormatted = new StringBuilder();

		Set<RecipeIngredients> recipeIngredients = (Set<RecipeIngredients>) recipe.getIngredients();

		if (recipeIngredients == null || recipeIngredients.isEmpty()) {
			ingredientsFormatted.append("No ingredients found.<br/>");
		}
		else {
			for (RecipeIngredients ri : recipeIngredients) {
				Ingredient ingredient = ri.getIngredient();
				if (ingredient != null) {
					ingredientsFormatted.append("- ").append(ingredient.getName()).append("<br/>");
				}
				else {
					ingredientsFormatted.append("- Ingredient is null<br/>");
				}
			}
		}

		return "Name: " + recipe.getName() + "<br/>"
				+ "Description: " + recipe.getDescription() + "<br/>"
				+ "Ingredients:<br/>" + ingredientsFormatted.toString();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_Back = new javax.swing.JButton();
        txtF_Search = new javax.swing.JTextField();
        btn_Search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Recipe = new javax.swing.JTable();
        btn_ViewRecipe = new javax.swing.JButton();
        btn_AddRecipe = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btn_Back.setText("<-");
        btn_Back.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BackActionPerformed(evt);
            }
        });

        txtF_Search.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btn_Search.setText("Search");
        btn_Search.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchActionPerformed(evt);
            }
        });

        jTable_Recipe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable_Recipe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_Recipe);

        btn_ViewRecipe.setText("View Recipe");
        btn_ViewRecipe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_ViewRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ViewRecipeActionPerformed(evt);
            }
        });

        btn_AddRecipe.setText("Add Recipe");
        btn_AddRecipe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_AddRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddRecipeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(btn_AddRecipe, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_ViewRecipe, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtF_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_Back, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btn_Back)
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtF_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Search))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_AddRecipe)
                    .addComponent(btn_ViewRecipe))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AddRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddRecipeActionPerformed
		// TODO add your handling code here:
		RecipeRegisterView rv = new RecipeRegisterView();
		rv.setVisible(true);
    }//GEN-LAST:event_btn_AddRecipeActionPerformed

    private void btn_ViewRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ViewRecipeActionPerformed
		// TODO add your handling code here:

		int row = jTable_Recipe.getSelectedRow();
		if (row >= 0) {
			String details = getRecipeDetails(row);
			JOptionPane.showMessageDialog(this,
					"<html><div style='width:300px'>" + details + "</div></html>",
					"Recipe Details",
					JOptionPane.INFORMATION_MESSAGE);
		}
		else {
			JOptionPane.showMessageDialog(this,
					"Please select a recipe first",
					"Warning",
					JOptionPane.WARNING_MESSAGE);
		}

    }//GEN-LAST:event_btn_ViewRecipeActionPerformed

    private void btn_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchActionPerformed
		// TODO add your handling code here:        String searchTerm = txtF_Search.getText().trim();
		String searchTerm = txtF_Search.getText().trim();  // Remova o comentÃ¡rio no inÃ­cio desta linha
		RecipeDAO dao = new RecipeDAO();
		List<Recipe> results;

		if (searchTerm.isEmpty()) {
			results = dao.findAll();
		}
		else {
			results = dao.findByName(searchTerm);
		}

		updateTable(results);

    }//GEN-LAST:event_btn_SearchActionPerformed

    private void btn_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BackActionPerformed
		// TODO add your handling code here:
		this.dispose();
    }//GEN-LAST:event_btn_BackActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(RecipeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(RecipeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(RecipeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(RecipeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new RecipeView().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_AddRecipe;
    private javax.swing.JButton btn_Back;
    private javax.swing.JButton btn_Search;
    private javax.swing.JButton btn_ViewRecipe;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Recipe;
    private javax.swing.JTextField txtF_Search;
    // End of variables declaration//GEN-END:variables
}
